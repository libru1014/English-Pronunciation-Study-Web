{"version":3,"file":"static/js/621.809b6704.chunk.js","mappings":"8MAKA,MAAMA,EACQ,iEAIRC,EACQ,uEA0Fd,QAtFA,WACI,MAAOC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAAIC,IAASF,EAAAA,EAAAA,UAAS,KACtBG,EAAKC,IAAUJ,EAAAA,EAAAA,UAAS,KACxBK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IAChCO,EAAUC,IAAeR,EAAAA,EAAAA,WAAS,IAElCS,EAASC,IAAcV,EAAAA,EAAAA,UAASJ,IAChCe,EAAUC,IAAeZ,EAAAA,EAAAA,UAASH,GA2CzC,OACIgB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAACE,EAAAA,EAAI,CAACC,YAAU,EAAClB,UAAWA,EAAWmB,SA/B1BC,UACjBC,EAAMC,iBAGN,IAA6B,IAFhBD,EAAME,cAEVC,gBACLH,EAAMI,uBAEN,UACUC,EAAAA,EAAMC,KAAK,SAAU,CAAC,SAAaxB,EAAI,SAAaE,GAAM,CAACuB,iBAAkB,IAChFC,MAAKC,IACmB,KAAnBA,EAASC,SACTC,OAAOC,SAASC,KAAO,IAC3B,IAEDC,OAAMC,IACLC,MAAM,4IAA8B,GAE5C,CAAE,MAAOD,GACLE,QAAQC,IAAIH,EAChB,CAGJnC,GAAa,EAAK,EASiDuC,UAAU,aAAYxB,SAAA,EACjFyB,EAAAA,EAAAA,KAAA,MAAAzB,SAAI,wBACJD,EAAAA,EAAAA,MAACE,EAAAA,EAAKyB,MAAK,CAACC,UAAU,qBAAoB3B,SAAA,EACtCyB,EAAAA,EAAAA,KAACxB,EAAAA,EAAK2B,MAAK,CAAA5B,SAAC,wBACZyB,EAAAA,EAAAA,KAACxB,EAAAA,EAAK4B,QAAO,CAACL,UAAS,GAAAM,OAAOvC,EAAU,aAAe,IACrDwC,SAhDAC,IACd5C,EAAM4C,EAAEC,OAAOC,OACf1C,GAAW,GACXI,EAAWd,EAAc,EA8CXqD,KAAK,OACLC,YAAY,qBACZC,UAAQ,KAEVZ,EAAAA,EAAAA,KAACxB,EAAAA,EAAK4B,QAAQS,SAAQ,CAACH,KAAK,UAASnC,SAChCL,QAGTI,EAAAA,EAAAA,MAACE,EAAAA,EAAKyB,MAAK,CAACC,UAAU,qBAAqBH,UAAU,OAAMxB,SAAA,EACvDyB,EAAAA,EAAAA,KAACxB,EAAAA,EAAK2B,MAAK,CAAA5B,SAAC,8BACZyB,EAAAA,EAAAA,KAACxB,EAAAA,EAAK4B,QAAO,CAACL,UAAS,GAAAM,OAAOrC,EAAW,aAAe,IACtDsC,SAtDCC,IACf1C,EAAO0C,EAAEC,OAAOC,OAChBxC,GAAY,GACZI,EAAYf,EAAe,EAoDboD,KAAK,WACLC,YAAY,2BACZC,UAAQ,KAEVZ,EAAAA,EAAAA,KAACxB,EAAAA,EAAK4B,QAAQS,SAAQ,CAACH,KAAK,UAASnC,SAChCH,QAGT4B,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAACJ,KAAK,SAASX,UAAU,OAAMxB,SAAC,2BAE3CyB,EAAAA,EAAAA,KAAA,OAAKe,I,6/HAAgBC,QAlCHC,KACtB1B,OAAOC,SAASC,KAAO,cAAc,EAiCgBM,UAAU,WAGvE,C","sources":["routes/Login.js"],"sourcesContent":["import { Form, Button } from 'react-bootstrap';\r\nimport {useState} from 'react';\r\nimport axios from 'axios';\r\nimport googleimg from '../web_light_rd_SI@1x.png'\r\n\r\nconst idError = {\r\n    'empty' : '아이디를 입력해주세요.',\r\n    'no_id' : '입력하신 아이디가 존재하지 않습니다.'\r\n}\r\n\r\nconst pwdError = {\r\n    'empty' : '비밀번호를 입력해주세요.',\r\n    'no_pwd' : '잘못된 비밀번호를 입력하셨습니다.'\r\n}\r\n\r\nfunction Login(){\r\n    const [validated, setValidated] = useState(false)\r\n    const [id, setId] = useState('')\r\n    const [pwd, setPwd] = useState('')\r\n    const [validId, setValidId] = useState(false)\r\n    const [validPwd, setValidPwd] = useState(false)\r\n\r\n    const [errorId, setErrorId] = useState(idError.empty)\r\n    const [errorPwd, setErrorPwd] = useState(pwdError.empty)\r\n\r\n    const handleId = (e) => {\r\n        setId(e.target.value)\r\n        setValidId(false)\r\n        setErrorId(idError.empty)\r\n    }\r\n\r\n    const handlePwd = (e) => {\r\n        setPwd(e.target.value)\r\n        setValidPwd(false)\r\n        setErrorPwd(pwdError.empty)\r\n    }\r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const form = event.currentTarget;\r\n        \r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        } else {\r\n            try {\r\n                await axios.post('/login', {'username' : id, 'password' : pwd}, {withCredentials : true})\r\n                  .then(response => {\r\n                    if (response.status == 200) {\r\n                        window.location.href = '/'\r\n                    }\r\n                  })\r\n                  .catch(error => {\r\n                    alert(\"아이디가 없거나 잘못된 비밀번호를 입력하셨습니다.\")\r\n                  })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    const handleGoogleLogin = () => {\r\n        window.location.href = '/auth/google'\r\n    }\r\n    \r\n    return(\r\n        <div>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className='forms mt-5'>\r\n                <h1>로그인</h1>\r\n                <Form.Group controlId=\"validationUsername\">\r\n                    <Form.Label>아이디</Form.Label>\r\n                    <Form.Control className = {`${validId ? 'is-invalid' : ''}`}\r\n                      onChange={handleId}\r\n                      type=\"text\"\r\n                      placeholder=\"아이디\"\r\n                      required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {errorId}\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"validationPassword\" className='mt-3'>\r\n                    <Form.Label>비밀번호</Form.Label>\r\n                    <Form.Control className = {`${validPwd ? 'is-invalid' : ''}`}\r\n                      onChange={handlePwd}\r\n                      type=\"password\"\r\n                      placeholder=\"비밀번호\"\r\n                      required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        {errorPwd}\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button type=\"submit\" className='mt-3'>로그인</Button>\r\n            </Form>\r\n            <img src={googleimg} onClick={handleGoogleLogin} className='mt-3'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;"],"names":["idError","pwdError","validated","setValidated","useState","id","setId","pwd","setPwd","validId","setValidId","validPwd","setValidPwd","errorId","setErrorId","errorPwd","setErrorPwd","_jsxs","children","Form","noValidate","onSubmit","async","event","preventDefault","currentTarget","checkValidity","stopPropagation","axios","post","withCredentials","then","response","status","window","location","href","catch","error","alert","console","log","className","_jsx","Group","controlId","Label","Control","concat","onChange","e","target","value","type","placeholder","required","Feedback","Button","src","onClick","handleGoogleLogin"],"sourceRoot":""}